#!/bin/bash

# Who am I?
me=`basename $0`

# Get options.
LNOPTS=""
if [ $# -gt 0 ]; then
  if [[ "$1" == "-f" ]]; then
    LNOPTS="-f"
  else
    echo "Unrecognized option: $1"
    cat << EOF
Usage: $me [OPTIONS]

    Options:
    -f    Force 'ln' to create a new link, even if one already exists with the
          same name.
EOF
    exit 1
  fi
fi

# This appears to be the "best" way to get the canonicalized path to where this
# script is located, which is, presumably, where all of my dotfiles are.
# Lifted from http://stackoverflow.com/a/4774063
pushd `dirname $0` > /dev/null
SCRIPTPATH=`pwd`
BINPATH="$SCRIPTPATH/bin"
SCRIPTPATH="$SCRIPTPATH/configs"
popd > /dev/null

pushd ~ > /dev/null

echo "Creating symlinks for all configuration files in $SCRIPTPATH."
echo ""

for dotfile in `find $SCRIPTPATH -mindepth 1 -maxdepth 1`; do
  if [[ "${dotfile##*/}" == "bashrc" ]]; then
    linkfile=".bash_profile"
  else
    linkfile=".${dotfile##*/}"
  fi

  echo -n "Linking $dotfile -> $linkfile... "
  if [ -e "$linkfile" ]; then
    echo "Exists"
  else
    ln -s $LNOPTS "$dotfile" "./$linkfile" > /dev/null 2>&1

    if [ $? -eq 0 ]; then
      echo "OK"
    else
      echo "Failed"
    fi
  fi
done
