# Enable profiling
# zmodload zsh/zprof

# If you don't have antigen installed, you're probably running on a new
# machine
if [[ ! -f /usr/local/share/antigen/antigen.zsh ]]; then
  # Install antigen on Mac OS
  if [[ "$OSTYPE" == "darwin"* ]]; then
    if ! type "$brew" > /dev/null; then
      echo '`brew` is missing. Installing...'
      /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi
    echo 'Installing `antigen` for .zshrc plugin management...'
    brew install antigen
  else
    echo '.zshrc requires `antigen` for plugin management! Please install it.'
    return 1
  fi
fi

# Source anitgen for zsh plugin management
source /usr/local/share/antigen/antigen.zsh

# Autocompletion w/ once-a-day loading
autoload -Uz compinit
typeset -i updated_at=$(date +'%j' -r ~/.zcompdump 2>/dev/null || stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)
if [ $(date +'%j') != $updated_at ]; then
  compinit -i
else
  compinit -C -i
fi

# Plugins from oh-my-zsh
antigen bundle git
antigen bundle vi-mode
antigen bundle colored-man-pages
antigen bundle autojump
antigen bundle command-not-found

# Other plugins
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle mroth/evalcache
antigen bundle zsh-users/zsh-autosuggestions

# Theme
antigen bundle agkozak/agkozak-zsh-prompt
AGKOZAK_LEFT_PROMPT_ONLY=1
AGKOZAK_PROMPT_DIRTRIM=0
AGKOZAK_CUSTOM_SYMBOLS=(
  '⇣⇡' # Diverged
  '⇣' # Behind
  '⇡' # Ahead
  '+' # New file
  'x' # Deleted
  '!' # Modified
  '>' # Renamed
  '?' # Untracked
  '$' # Stashed changes
)

# Apply antigen configuration
antigen apply

# Colorize CLI ouputs
export CLICOLOR=1

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# Autocomplete settings
unsetopt menu_complete   # do not autoselect the first completion entry
unsetopt flowcontrol
setopt auto_menu         # show completion menu on successive tab press
setopt complete_in_word
setopt always_to_end
zstyle ':completion:*' menu select # highlight current tab selection

## partial completion suggestions
zstyle ':completion:*' list-suffixes zstyle ':completion:*' expand prefix suffix 

# History settings
export HISTFILE="$HOME/.zsh_history"
export SAVEHIST=100000
export HISTSIZE=100000
setopt hist_ignore_all_dups
setopt hist_reduce_blanks
setopt inc_append_history
setopt share_history

# Extended globbing mode
setopt extended_glob

# Set to vi mode
bindkey -v

# Reduce delay in when switching modes
export KEYTIMEOUT=1

export EDITOR=$(which nvim)

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Initialize pyenv
PATH=$(pyenv root)/shims:$PATH
_evalcache pyenv init -

# Aliases
alias cat=bat
alias vim=nvim
alias e=nvim

# Function to get current git branch
git_current_branch () {
  local ref
  ref=$(command git symbolic-ref --quiet HEAD 2> /dev/null)
  local ret=$?
  if [[ $ret != 0 ]]; then
    [[ $ret == 128 ]] && return  # no git repo.
    ref=$(command git rev-parse --short HEAD 2> /dev/null) || return
  fi
  echo ${ref#refs/heads/}
}
